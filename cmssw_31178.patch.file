diff --git a/CondCore/Utilities/interface/Payload2XMLModule.h b/CondCore/Utilities/interface/Payload2XMLModule.h
index fd4aa36dcd497..a3d6ffc7afe8b 100644
--- a/CondCore/Utilities/interface/Payload2XMLModule.h
+++ b/CondCore/Utilities/interface/Payload2XMLModule.h
@@ -31,7 +31,7 @@ namespace {  // Avoid cluttering the global namespace.
       sdataBuf.pubsetbuf(const_cast<char *>(payloadData.c_str()), payloadData.size());
 
       std::istream inBuffer(&sdataBuf);
-      eos::portable_iarchive ia(inBuffer);
+      cond::serialization::InputArchive ia(inBuffer);
       payload.reset(new PayloadType);
       ia >> (*payload);
 
diff --git a/CondCore/Utilities/interface/PayloadInspector.h b/CondCore/Utilities/interface/PayloadInspector.h
index 017c5a803a67d..b40d30d7d0a8d 100644
--- a/CondCore/Utilities/interface/PayloadInspector.h
+++ b/CondCore/Utilities/interface/PayloadInspector.h
@@ -67,7 +67,7 @@ namespace cond {
     }
 
     template <>
-    std::string serializeValue(const std::string& entryLabel, const std::string& value) {
+    inline std::string serializeValue(const std::string& entryLabel, const std::string& value) {
       std::stringstream ss;
       ss << "\"" << entryLabel << "\":\"" << value << "\"";
       return ss.str();
@@ -93,7 +93,7 @@ namespace cond {
       return ss.str();
     }
 
-    std::string serializeAnnotations(const PlotAnnotations& annotations) {
+    inline std::string serializeAnnotations(const PlotAnnotations& annotations) {
       std::stringstream ss;
       ss << "\"version\": \"" << JSON_FORMAT_VERSION << "\",";
       ss << "\"annotations\": {";
@@ -149,7 +149,7 @@ namespace cond {
       return ss.str();
     }
 
-    std::string serialize(const PlotAnnotations& annotations, const std::string& imageFileName) {
+    inline std::string serialize(const PlotAnnotations& annotations, const std::string& imageFileName) {
       std::stringstream ss;
       ss << "{";
       ss << serializeAnnotations(annotations);
diff --git a/CondFormats/Serialization/interface/Archive.h b/CondFormats/Serialization/interface/Archive.h
index cf5a23391e4d8..11e4b5cbb34e7 100644
--- a/CondFormats/Serialization/interface/Archive.h
+++ b/CondFormats/Serialization/interface/Archive.h
@@ -1,4 +1,5 @@
-#pragma once
+#ifndef CondFormats_Serialization_Archive_hh
+#define CondFormats_Serialization_Archive_hh
 
 // Missing in EOS' portable archive
 #include <cassert>
@@ -21,3 +22,5 @@ namespace cond {
 
   }  // namespace serialization
 }  // namespace cond
+
+#endif
diff --git a/CondFormats/Serialization/interface/eos/portable_iarchive.hpp b/CondFormats/Serialization/interface/eos/portable_iarchive.hpp
index 86554ee147c34..f8ee02d8c4a65 100644
--- a/CondFormats/Serialization/interface/eos/portable_iarchive.hpp
+++ b/CondFormats/Serialization/interface/eos/portable_iarchive.hpp
@@ -82,7 +82,8 @@
  */
 /*****************************************************************************/
 
-#pragma once
+#ifndef CondFormats_Serialization_portable_iarchive_hpp
+#define CondFormats_Serialization_portable_iarchive_hpp
 
 #include <istream>
 
@@ -494,3 +495,5 @@ BOOST_SERIALIZATION_REGISTER_ARCHIVE(eos::polymorphic_portable_iarchive)
 // }  // namespace boost
 //
 // #endif
+
+#endif
diff --git a/CondFormats/Serialization/interface/eos/portable_oarchive.hpp b/CondFormats/Serialization/interface/eos/portable_oarchive.hpp
index 945e956fa817a..ba7aa18abfda4 100644
--- a/CondFormats/Serialization/interface/eos/portable_oarchive.hpp
+++ b/CondFormats/Serialization/interface/eos/portable_oarchive.hpp
@@ -85,7 +85,8 @@
  */
 /*****************************************************************************/
 
-#pragma once
+#ifndef CondFormats_Serialization_portable_oarchive_hpp
+#define CondFormats_Serialization_portable_oarchive_hpp
 
 #include <ostream>
 
@@ -493,3 +494,5 @@ BOOST_SERIALIZATION_REGISTER_ARCHIVE(eos::polymorphic_portable_oarchive)
 // }  // namespace boost
 //
 // #endif
+
+#endif
