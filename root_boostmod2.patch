diff --git a/interpreter/cling/include/cling/boost.modulemap b/interpreter/cling/include/cling/boost.modulemap
index 593b3c7..6acb150 100644
--- a/interpreter/cling/include/cling/boost.modulemap
+++ b/interpreter/cling/include/cling/boost.modulemap
@@ -932,9 +932,6 @@ module boost_flyweight {
   module "flyweight__tag" { header "flyweight/tag.hpp" export * }
   module "flyweight__tracking_tag" { header "flyweight/tracking_tag.hpp" export * }
 }
-module boost_foreach_fwd {
-  module "foreach_fwd" { header "foreach_fwd.hpp" export * }
-}
 module boost_format {
   module "format__alt_sstream" { header "format/alt_sstream.hpp" export * }
   module "format__detail__compat_workarounds" { header "format/detail/compat_workarounds.hpp" export * }
@@ -2334,7 +2331,6 @@ module boost_graph_pending_random_wrapper {
     module "pending__integer_log2" { header "pending/integer_log2.hpp" export * }
     module "pending__is_heap" { header "pending/is_heap.hpp" export * }
     module "pending__iterator_adaptors" { header "pending/iterator_adaptors.hpp" export * }
-    module "pending__lowest_bit" { header "pending/lowest_bit.hpp" export * }
     module "pending__mutable_queue" { header "pending/mutable_queue.hpp" export * }
     module "pending__property" { header "pending/property.hpp" export * }
     module "pending__property_serialize" { header "pending/property_serialize.hpp" export * }
@@ -5337,75 +5333,349 @@ module boost_qvm {
   module "qvm__vec_traits" { header "qvm/vec_traits.hpp" export * }
 }
 
-
-
-// This modules form a cycle, so we want to create a wrapper module for them
-module boost_modules_wrapper {
-
-module boost_serialization {
- export *
- exclude header "config/abi_prefix.hpp"
- // undefined BOOST_SERIALIZATION_ASSUME_ABSTRACT
- exclude header "serialization/detail/shared_count_132.hpp"
- exclude header "serialization/detail/shared_ptr_132.hpp"
- // misssing noexcept specifier 
- exclude header "serialization/detail/shared_ptr_nmt_132.hpp"
- umbrella "serialization"
- module * { export * }
-}
-
-
 module boost_date_time {
   export *
   // Cannot compile. Remove once we have this in: boostorg#date_time@d335a54 ships in 1.74
   exclude header "date_time/tz_db_base.hpp"
   exclude header "date_time/gregorian/gregorian_io.hpp"
+  // Likely fixed by the the same commit:
+  exclude header "date_time/posix_time/time_formatters.hpp"
+  //error: too many template arguments for class template 'date_formatter'
+  //  std::basic_string<charT> s(date_time::date_formatter<date,date_time::iso_format<charT>,charT>::date_to_string(d.begin()));
+  exclude header "date_time/gregorian/formatters.hpp"
+  // Disentangle from boost_serialization. Fixed by boostorg/date_time@356c5c2
+  exclude header "date_time/gregorian/greg_serialize.hpp"
+  exclude header "date_time/posix_time/time_serialize.hpp"
   umbrella "date_time"
   module * { export * }
 }
 
-module boost_thread {
-  module "thread" { header "thread.hpp" export * }
-  umbrella "thread" module * { export * }
-}
-module boost_archive {
-  export *
-  exclude header "archive/detail/abi_prefix.hpp"
-  exclude header "archive/detail/abi_suffix.hpp"
-  umbrella "archive"
-  module * { export * }
-}
-// lexical_cast/detail/inf_nan.hpp uses boost_math
-module boost_lexical_cast {
-  export *
-  module "lexical_cast" { header "lexical_cast.hpp" export * }
-  umbrella "lexical_cast"
-  module * { export * }
+// boost_archive and boost_serialization are intertwined.
+module boost_archive_and_serialization { export *
+  module boost_archive {
+    export *
+    exclude header "archive/detail/abi_prefix.hpp"
+    exclude header "archive/detail/abi_suffix.hpp"
+    // Depends on spirit and brings a lot of other dependencies
+    exclude header "archive/impl/basic_xml_grammar.hpp"
+    umbrella "archive"
+    module * { export * }
+  }
+
+  module boost_serialization {
+    export *
+    exclude header "config/abi_prefix.hpp"
+    // undefined BOOST_SERIALIZATION_ASSUME_ABSTRACT
+    exclude header "serialization/detail/shared_count_132.hpp"
+    exclude header "serialization/detail/shared_ptr_132.hpp"
+    // misssing noexcept specifier 
+    exclude header "serialization/detail/shared_ptr_nmt_132.hpp"
+    umbrella "serialization"
+    module * { export * }
+  }
 }
-module boost_math {
-  export boost_lexical_cast
-  export *
-  umbrella "math"
-  module * { export * }
+
+
+// boost_math and boost_lexical_cast are interwtined due to inf_nan
+module boost_math_and_lexical_cast { export *
+  // lexical_cast/detail/inf_nan.hpp uses boost_math
+  module boost_lexical_cast {
+    export *
+    module "lexical_cast" { header "lexical_cast.hpp" export * }
+    umbrella "lexical_cast"
+    module * { export * }
+  }
+
+  module boost_math {
+    export *
+
+    module math_interpolators { export * umbrella "math/interpolators" module * { export * } }
+    // Intentionally disabled due to pulling content from math/tools.
+    //module math_bindings { export * umbrella "math/bindings" module * { export * } }
+    module math_complex { export * umbrella "math/complex" module * { export * } }
+    module math_concepts {
+      export *
+      // Missing includes
+      exclude header "math/concepts/distributions.hpp"
+      umbrella "math/concepts"
+      module * { export * }
+    }
+    module math_constants { export * umbrella "math/constants" module * { export * } }
+    // Intentionally ignored due to a cycle with boost_cstdfloat.
+    //module math_cstdfloat { export * umbrella "math/cstdfloat" module * { export * } }
+    //module math_differentiation { export * umbrella "math/differentiation" module * { export * } }
+    /*module math_distributions {
+      export *
+      // Missing includes
+      exclude header "math/distributions/detail/inv_discrete_quantile.hpp"
+      umbrella "math/distributions"
+       module * { export * }
+    }*/
+    module math_policies { export * umbrella "math/policies" module * { export * } }
+    //module math_quadrature { export * umbrella "math/quadrature" module * { export * } }
+    // FIXME: Revisit next upgrade. 1.72 has math/special_functions broken.
+    //module special_functions_special_functions { header "math/special_functions.hpp" export * }
+    /*module math_special_functions {
+      export *
+      // Missing includes
+      exclude header "math/special_functions/detail/bessel_ik.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_1F1_large_abz.hpp"
+      exclude header "math/special_functions/detail/bessel_k0.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_1F1_cf.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_1F1_scaled_series.hpp"
+      exclude header "math/special_functions/detail/bernoulli_details.hpp"
+      exclude header "math/special_functions/detail/polygamma.hpp"
+      exclude header "math/special_functions/detail/ibeta_inv_ab.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_pade.hpp"
+      exclude header "math/special_functions/detail/bessel_jy_series.hpp"
+      exclude header "math/special_functions/detail/igamma_inverse.hpp"
+      exclude header "math/special_functions/detail/lgamma_small.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_separated_series.hpp"
+      exclude header "math/special_functions/detail/bessel_jy_asym.hpp"
+      exclude header "math/special_functions/detail/bessel_k1.hpp"
+      exclude header "math/special_functions/detail/bessel_kn.hpp"
+      exclude header "math/special_functions/detail/bessel_jy_derivatives_series.hpp"
+      exclude header "math/special_functions/detail/round_fwd.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_1F1_addition_theorems_on_z.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_1F1_negative_b_regions.hpp"
+      exclude header "math/special_functions/detail/fp_traits.hpp"
+      exclude header "math/special_functions/detail/bessel_y0.hpp"
+      exclude header "math/special_functions/detail/bessel_i0.hpp"
+      exclude header "math/special_functions/detail/bessel_derivatives_linear.hpp"
+      exclude header "math/special_functions/detail/gamma_inva.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_rational.hpp"
+      exclude header "math/special_functions/detail/ibeta_inverse.hpp"
+      exclude header "math/special_functions/detail/lambert_w_lookup_table.ipp"
+      exclude header "math/special_functions/detail/t_distribution_inv.hpp"
+      exclude header "math/special_functions/detail/bessel_j1.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_1F1_large_a.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_series.hpp"
+      exclude header "math/special_functions/detail/bessel_jy_derivatives_asym.hpp"
+      exclude header "math/special_functions/detail/bessel_y1.hpp"
+      exclude header "math/special_functions/detail/unchecked_bernoulli.hpp"
+      exclude header "math/special_functions/detail/bessel_jn.hpp"
+      exclude header "math/special_functions/detail/airy_ai_bi_zero.hpp"
+      exclude header "math/special_functions/detail/bessel_yn.hpp"
+      exclude header "math/special_functions/detail/erf_inv.hpp"
+      exclude header "math/special_functions/detail/bessel_i1.hpp"
+      exclude header "math/special_functions/detail/lanczos_sse2.hpp"
+      exclude header "math/special_functions/detail/unchecked_factorial.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_asym.hpp"
+      exclude header "math/special_functions/detail/bessel_j0.hpp"
+      exclude header "math/special_functions/detail/iconv.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_1F1_bessel.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_cf.hpp"
+      exclude header "math/special_functions/detail/bessel_jy.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_1F1_by_ratios.hpp"
+      exclude header "math/special_functions/detail/bessel_jy_zero.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_0F1_bessel.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_1F1_small_a_negative_b_by_ratio.hpp"
+      exclude header "math/special_functions/detail/igamma_large.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_1F1_recurrence.hpp"
+      exclude header "math/special_functions/detail/hypergeometric_pFq_checked_series.hpp"
+      module zeta_gama {
+        // gamma.hpp includes zeta.hpp which includes gamma.hpp
+        export *
+        header "math/special_functions/gamma.hpp"
+        header "math/special_functions/next.hpp"
+        header "math/special_functions/zeta.hpp"
+        header "math/special_functions/factorials.hpp"
+        header "math/special_functions/erf.hpp"
+        header "math/special_functions/legendre_stieltjes.hpp"
+        header "math/special_functions/hypergeometric_1F0.hpp"
+      }
+      umbrella "math/special_functions"
+      module * { export * }
+    }*/
+    //module special_functions_special_functions { header "math/special_functions.hpp" export * }
+    // We cannot build boost/math/statistics/runs_test.hpp:15:
+    // In file included from  boost/math/distributions/normal.hpp:19:
+    // In file included from  boost/math/special_functions/erf.hpp:15:
+    // In file included from  boost/math/special_functions/gamma.hpp:2210:
+    // In file included from  boost/math/special_functions/detail/igamma_inverse.hpp:16:
+    // In file included from  boost/math/tools/roots.hpp:34:
+    // boost/math/special_functions/next.hpp:340:13: error: no matching function for call to 'ldexp'
+    //module math_statistics { export * umbrella "math/statistics" module * { export * } }
+    // Ignored due to many missing includes
+    //module math_tools { export * umbrella "math/tools" module * { export * } }
+/*
+    // Avoid cycle with boost_cstdfloat.
+    exclude header "math/cstdfloat/cstdfloat_cmath.hpp"
+    exclude header "math/cstdfloat/cstdfloat_complex_std.hpp"
+    exclude header "math/cstdfloat/cstdfloat_limits.hpp"
+    exclude header "math/cstdfloat/cstdfloat_complex.hpp"
+    exclude header "math/cstdfloat/cstdfloat_iostream.hpp"
+    exclude header "math/cstdfloat/cstdfloat_types.hpp"
+    exclude header "math/tools/test_value.hpp"
+    // Triggers a lot of underlying headers with missing includes
+    exclude header "math/complex.hpp"
+    // Missing includes.
+    exclude header "math/tools/detail/polynomial_horner1_3.hpp"
+    exclude header "math/tools/recurrence.hpp"
+
+    umbrella "math"
+    module * { export * }*/
+  }
 }
 
+
+module boost_algorithm_and_range { export *
 module boost_range {
   export *
+  module range_range { header "range.hpp" export * }
   umbrella "range"
   exclude header "range/detail/msvc_has_iterator_workaround.hpp"
+  // afx.h (some legacy cstring header) is missing.
+  exclude header "range/mfc.hpp"
+  exclude header "range/mfc_map.hpp"
+  // atldef.h not found
+  exclude header "range/atl.hpp"
+  // Missing includes
+  exclude header "range/traversal.hpp"
+  // Excluded entire details folder due to various inconsistencies
+  // such as missing includes.
+  exclude header "range/detail/has_member_size.hpp"
+  exclude header "range/detail/collection_traits_detail.hpp"
+  exclude header "range/detail/common.hpp"
+  exclude header "range/detail/any_iterator_buffer.hpp"
+  exclude header "range/detail/combine_rvalue.hpp"
+  exclude header "range/detail/safe_bool.hpp"
+  exclude header "range/detail/extract_optional_type.hpp"
+  exclude header "range/detail/as_literal.hpp"
+  exclude header "range/detail/combine_cxx11.hpp"
+  exclude header "range/detail/sfinae.hpp"
+  exclude header "range/detail/default_constructible_unary_fn.hpp"
+  exclude header "range/detail/microsoft.hpp"
+  exclude header "range/detail/less.hpp"
+  exclude header "range/detail/combine_cxx03.hpp"
+  exclude header "range/detail/detail_str.hpp"
+  exclude header "range/detail/join_iterator.hpp"
+  exclude header "range/detail/any_iterator_wrapper.hpp"
+  exclude header "range/detail/any_iterator.hpp"
+  exclude header "range/detail/size_type.hpp"
+  exclude header "range/detail/range_return.hpp"
+  exclude header "range/detail/demote_iterator_traversal_tag.hpp"
+  exclude header "range/detail/str_types.hpp"
+  exclude header "range/detail/combine_no_rvalue.hpp"
+  exclude header "range/detail/value_type.hpp"
+  exclude header "range/detail/empty.hpp"
+  exclude header "range/detail/any_iterator_interface.hpp"
+  exclude header "range/detail/implementation_help.hpp"
+  exclude header "range/detail/sizer.hpp"
+  exclude header "range/detail/begin.hpp"
+  exclude header "range/detail/remove_extent.hpp"
+  exclude header "range/detail/end.hpp"
+  exclude header "range/detail/msvc_has_iterator_workaround.hpp"
+  exclude header "range/detail/collection_traits.hpp"
+  exclude header "range/detail/difference_type.hpp"
+  exclude header "range/detail/misc_concept.hpp"
   module * { export * }
 }
-
 module boost_algorithm {
   export *
+  // Missing rope.h header.
+  exclude header "algorithm/string/std/rope_traits.hpp"
   umbrella "algorithm"
   module * { export * }
 }
-  module boost_units {
+}
+
+module boost_numeric {
+  export *
+  module interval_interval { header "numeric/interval.hpp" export *}
+  /*module interval {
     export *
-    umbrella "units"
+    umbrella "numeric/interval"
     module * { export * }
+  }*/
+  // intentionally do not include conversion; it leads to cycles mostly via boost_cast
+  //module odeint_odeint { header "numeric/odeint.hpp" export * }
+  module odeint {
+    export *
+    module config { export * header "numeric/odeint/config.hpp" }
+    module version { export * header "numeric/odeint/version.hpp" }
+    module algebra { export * umbrella "numeric/odeint/algebra" module * { export * }}
+    // We may not have openmp or other externals installed.
+    //module external { export * umbrella "numeric/odeint/external" module * { export * }}
+    module integrate {
+      export *
+      // Missing includes:
+      exclude header "numeric/odeint/integrate/integrate_n_steps.hpp"
+      exclude header "numeric/odeint/integrate/detail/integrate_n_steps.hpp"
+      exclude header "numeric/odeint/integrate/detail/integrate_times.hpp"
+      exclude header "numeric/odeint/integrate/detail/functors.hpp"
+      exclude header "numeric/odeint/integrate/detail/integrate_const.hpp"
+      exclude header "numeric/odeint/util/detail/is_range.hpp"
+      exclude header "numeric/odeint/integrate/detail/integrate_adaptive.hpp"
+      exclude header "numeric/odeint/integrate/integrate_times.hpp"
+      exclude header "numeric/odeint/integrate/integrate_const.hpp"
+      exclude header "numeric/odeint/integrate/check_adapter.hpp"
+
+      umbrella "numeric/odeint/integrate"
+       module * { export * }
+    }
+    // FIXME: Missing includes
+    //module iterator { export * umbrella "numeric/odeint/iterator" module * { export * }}
+    //module stepper { export * umbrella "numeric/odeint/stepper" module * { export * }}
+    module util { export * umbrella "numeric/odeint/util" module * { export * }}
   }
+
+  module ublas {
+    export *
+    // Missing includes.
+    exclude header "numeric/ublas/detail/definitions.hpp"
+    exclude header "numeric/ublas/detail/matrix_assign.hpp"
+    exclude header "numeric/ublas/detail/raw.hpp"
+    exclude header "numeric/ublas/detail/concepts.hpp"
+    exclude header "numeric/ublas/tensor/multi_index_utility.hpp"
+    exclude header "numeric/ublas/tensor/multiplication.hpp"
+    exclude header "numeric/ublas/tensor/multi_index.hpp"
+    exclude header "numeric/ublas/tensor.hpp"
+    exclude header "numeric/ublas/tensor/tensor.hpp"
+    exclude header "numeric/ublas/operation_sparse.hpp"
+
+    umbrella "numeric/ublas"
+    module * { export * }
+  }
+
+}
+module boost_cast {
+  module "cast" { header "cast.hpp" export * }
+}
+
+module boost_variant {
+  export *
+  // Missing includes:
+  exclude header "variant/detail/over_sequence.hpp"
+  exclude header "variant/detail/multivisitors_cpp14_based.hpp"
+  module variant_variant { header "variant.hpp" export * }
+  umbrella "variant"
+  module * { export * }
+}
+
+module boost_thread {
+  module "thread" { header "thread.hpp" export * }
+  umbrella "thread" module * { export * }
+}
+
+module boost_units {
+  export *
+  umbrella "units"
+  module * { export * }
+}
+
+module boost_foreach {
+  module "foreach" { header "foreach.hpp" export * }
+}
+// FIXME: Combine with boost_foreach
+module boost_foreach_fwd {
+  module "foreach_fwd" { header "foreach_fwd.hpp" export * }
+}
+
+
+// This modules form a cycle, so we want to create a wrapper module for them
+module boost_modules_wrapper {
+
   module boost_iostreams {
     module "iostreams__categories" { header "iostreams/categories.hpp" export * }
     module "iostreams__chain" { header "iostreams/chain.hpp" export * }
@@ -5524,9 +5794,6 @@ module boost_algorithm {
     module "iostreams__traits" { header "iostreams/traits.hpp" export * }
     module "iostreams__write" { header "iostreams/write.hpp" export * }
   }
-  module boost_foreach {
-    module "foreach" { header "foreach.hpp" export * }
-  }
   module boost_proto {
     module "proto__args" { header "proto/args.hpp" export * }
     module "proto__context__callable" { header "proto/context/callable.hpp" export * }
@@ -6662,234 +6929,6 @@ In file included from /home/teemperor/llvm/boost-compile/inc-cms/boost/spirit/ho
     module "spirit__repository__include__qi_seek" { header "spirit/repository/include/qi_seek.hpp" export * }
     module "spirit__version" { header "spirit/version.hpp" export * }
   }
-  module boost_variant {
-    module "variant__apply_visitor" { header "variant/apply_visitor.hpp" export * }
-    module "variant__detail__apply_visitor_binary" { header "variant/detail/apply_visitor_binary.hpp" export * }
-    module "variant__detail__apply_visitor_delayed" { header "variant/detail/apply_visitor_delayed.hpp" export * }
-    module "variant__detail__apply_visitor_unary" { header "variant/detail/apply_visitor_unary.hpp" export * }
-    module "variant__detail__backup_holder" { header "variant/detail/backup_holder.hpp" export * }
-    module "variant__detail__cast_storage" { header "variant/detail/cast_storage.hpp" export * }
-    module "variant__detail__config" { header "variant/detail/config.hpp" export * }
-    module "variant__detail__element_index" { header "variant/detail/element_index.hpp" export * }
-    module "variant__detail__enable_recursive_fwd" { header "variant/detail/enable_recursive_fwd.hpp" export * }
-    module "variant__detail__enable_recursive" { header "variant/detail/enable_recursive.hpp" export * }
-    module "variant__detail__forced_return" { header "variant/detail/forced_return.hpp" export * }
-    module "variant__detail__hash_variant" { header "variant/detail/hash_variant.hpp" export * }
-    module "variant__detail__has_result_type" { header "variant/detail/has_result_type.hpp" export * }
-    module "variant__detail__initializer" { header "variant/detail/initializer.hpp" export * }
-    module "variant__detail__make_variant_list" { header "variant/detail/make_variant_list.hpp" export * }
-    module "variant__detail__move" { header "variant/detail/move.hpp" export * }
-    module "variant__detail__multivisitors_cpp11_based" { header "variant/detail/multivisitors_cpp11_based.hpp" export * }
-    module "variant__detail__multivisitors_preprocessor_based" { header "variant/detail/multivisitors_preprocessor_based.hpp" export * }
-    module "variant__detail__substitute_fwd" { header "variant/detail/substitute_fwd.hpp" export * }
-    //FIXME: Self-imports itself: module "variant__detail__substitute" { header "variant/detail/substitute.hpp" export * }
-    module "variant__detail__variant_io" { header "variant/detail/variant_io.hpp" export * }
-    module "variant__detail__visitation_impl" { header "variant/detail/visitation_impl.hpp" export * }
-    module "variant__get" { header "variant/get.hpp" export * }
-    module "variant" { header "variant.hpp" export * }
-    module "variant__multivisitors" { header "variant/multivisitors.hpp" export * }
-    module "variant__recursive_variant" { header "variant/recursive_variant.hpp" export * }
-    module "variant__recursive_wrapper_fwd" { header "variant/recursive_wrapper_fwd.hpp" export * }
-    module "variant__recursive_wrapper" { header "variant/recursive_wrapper.hpp" export * }
-    module "variant__static_visitor" { header "variant/static_visitor.hpp" export * }
-    module "variant__variant_fwd" { header "variant/variant_fwd.hpp" export * }
-    module "variant__variant" { header "variant/variant.hpp" export * }
-  }
-  module boost_numeric {
-    module "numeric__conversion__bounds" { header "numeric/conversion/bounds.hpp" export * }
-    module "numeric__conversion__cast" { header "numeric/conversion/cast.hpp" export * }
-    module "numeric__conversion__conversion_traits" { header "numeric/conversion/conversion_traits.hpp" export * }
-    module "numeric__conversion__converter" { header "numeric/conversion/converter.hpp" export * }
-    module "numeric__conversion__detail__bounds" { header "numeric/conversion/detail/bounds.hpp" export * }
-    module "numeric__conversion__detail__conversion_traits" { header "numeric/conversion/detail/conversion_traits.hpp" export * }
-    module "numeric__conversion__detail__int_float_mixture" { header "numeric/conversion/detail/int_float_mixture.hpp" export * }
-    module "numeric__conversion__detail__is_subranged" { header "numeric/conversion/detail/is_subranged.hpp" export * }
-    module "numeric__conversion__detail__meta" { header "numeric/conversion/detail/meta.hpp" export * }
-    module "numeric__conversion__detail__sign_mixture" { header "numeric/conversion/detail/sign_mixture.hpp" export * }
-    module "numeric__conversion__detail__udt_builtin_mixture" { header "numeric/conversion/detail/udt_builtin_mixture.hpp" export * }
-    module "numeric__conversion__int_float_mixture_enum" { header "numeric/conversion/int_float_mixture_enum.hpp" export * }
-    module "numeric__conversion__int_float_mixture" { header "numeric/conversion/int_float_mixture.hpp" export * }
-    module "numeric__conversion__is_subranged" { header "numeric/conversion/is_subranged.hpp" export * }
-    module "numeric__conversion__sign_mixture_enum" { header "numeric/conversion/sign_mixture_enum.hpp" export * }
-    module "numeric__conversion__sign_mixture" { header "numeric/conversion/sign_mixture.hpp" export * }
-    module "numeric__conversion__udt_builtin_mixture_enum" { header "numeric/conversion/udt_builtin_mixture_enum.hpp" export * }
-    module "numeric__conversion__udt_builtin_mixture" { header "numeric/conversion/udt_builtin_mixture.hpp" export * }
-    module "numeric__interval__arith2" { header "numeric/interval/arith2.hpp" export * }
-    module "numeric__interval__arith3" { header "numeric/interval/arith3.hpp" export * }
-    module "numeric__interval__arith" { header "numeric/interval/arith.hpp" export * }
-    module "numeric__interval__checking" { header "numeric/interval/checking.hpp" export * }
-    module "numeric__interval__compare__explicit" { header "numeric/interval/compare/explicit.hpp" export * }
-    module "numeric__interval__constants" { header "numeric/interval/constants.hpp" export * }
-    module "numeric__interval__detail__bugs" { header "numeric/interval/detail/bugs.hpp" export * }
-    module "numeric__interval__detail__c99sub_rounding_control" { header "numeric/interval/detail/c99sub_rounding_control.hpp" export * }
-    module "numeric__interval__detail__division" { header "numeric/interval/detail/division.hpp" export * }
-    module "numeric__interval__detail__interval_prototype" { header "numeric/interval/detail/interval_prototype.hpp" export * }
-    module "numeric__interval__detail__test_input" { header "numeric/interval/detail/test_input.hpp" export * }
-    module "numeric__interval__ext__integer" { header "numeric/interval/ext/integer.hpp" export * }
-    module "numeric__interval" { header "numeric/interval.hpp" export * }
-    module "numeric__interval__hw_rounding" { header "numeric/interval/hw_rounding.hpp" export * }
-    module "numeric__interval__interval" { header "numeric/interval/interval.hpp" export * }
-    module "numeric__interval__io" { header "numeric/interval/io.hpp" export * }
-    module "numeric__interval__limits" { header "numeric/interval/limits.hpp" export * }
-    module "numeric__interval__policies" { header "numeric/interval/policies.hpp" export * }
-    module "numeric__interval__rounded_arith" { header "numeric/interval/rounded_arith.hpp" export * }
-    module "numeric__interval__rounded_transc" { header "numeric/interval/rounded_transc.hpp" export * }
-    module "numeric__interval__rounding" { header "numeric/interval/rounding.hpp" export * }
-    module "numeric__interval__transc" { header "numeric/interval/transc.hpp" export * }
-    module "numeric__interval__utility" { header "numeric/interval/utility.hpp" export * }
-    module "numeric__odeint__algebra__algebra_dispatcher" { header "numeric/odeint/algebra/algebra_dispatcher.hpp" export * }
-    module "numeric__odeint__algebra__array_algebra" { header "numeric/odeint/algebra/array_algebra.hpp" export * }
-    module "numeric__odeint__algebra__default_operations" { header "numeric/odeint/algebra/default_operations.hpp" export * }
-    module "numeric__odeint__algebra__detail__extract_value_type" { header "numeric/odeint/algebra/detail/extract_value_type.hpp" export * }
-    module "numeric__odeint__algebra__detail__for_each" { header "numeric/odeint/algebra/detail/for_each.hpp" export * }
-    module "numeric__odeint__algebra__detail__macros" { header "numeric/odeint/algebra/detail/macros.hpp" export * }
-    module "numeric__odeint__algebra__fusion_algebra_dispatcher" { header "numeric/odeint/algebra/fusion_algebra_dispatcher.hpp" export * }
-    module "numeric__odeint__algebra__fusion_algebra" { header "numeric/odeint/algebra/fusion_algebra.hpp" export * }
-    module "numeric__odeint__algebra__norm_result_type" { header "numeric/odeint/algebra/norm_result_type.hpp" export * }
-    module "numeric__odeint__algebra__operations_dispatcher" { header "numeric/odeint/algebra/operations_dispatcher.hpp" export * }
-    module "numeric__odeint__algebra__range_algebra" { header "numeric/odeint/algebra/range_algebra.hpp" export * }
-    module "numeric__odeint__algebra__vector_space_algebra" { header "numeric/odeint/algebra/vector_space_algebra.hpp" export * }
-    module "numeric__odeint__config" { header "numeric/odeint/config.hpp" export * }
-    // Unused header that requires gsl/gsl_vector.h to be compiled.
-    //module "numeric__odeint__external__gsl__gsl_wrapper" { header "numeric/odeint/external/gsl/gsl_wrapper.hpp" export * }
-    module "numeric__odeint__external__openmp__openmp_nested_algebra" { header "numeric/odeint/external/openmp/openmp_nested_algebra.hpp" export * }
-    module "numeric__odeint__external__openmp__openmp_range_algebra" { header "numeric/odeint/external/openmp/openmp_range_algebra.hpp" export * }
-    module "numeric__odeint" { header "numeric/odeint.hpp" export * }
-    module "numeric__odeint__integrate__integrate_adaptive" { header "numeric/odeint/integrate/integrate_adaptive.hpp" export * }
-    module "numeric__odeint__integrate__integrate" { header "numeric/odeint/integrate/integrate.hpp" export * }
-    module "numeric__odeint__integrate__integrate_times" { header "numeric/odeint/integrate/integrate_times.hpp" export * }
-    module "numeric__odeint__integrate__max_step_checker" { header "numeric/odeint/integrate/max_step_checker.hpp" export * }
-    module "numeric__odeint__integrate__null_observer" { header "numeric/odeint/integrate/null_observer.hpp" export * }
-    module "numeric__odeint__integrate__observer_collection" { header "numeric/odeint/integrate/observer_collection.hpp" export * }
-    module "numeric__odeint__iterator__adaptive_iterator" { header "numeric/odeint/iterator/adaptive_iterator.hpp" export * }
-    module "numeric__odeint__iterator__adaptive_time_iterator" { header "numeric/odeint/iterator/adaptive_time_iterator.hpp" export * }
-    module "numeric__odeint__iterator__const_step_iterator" { header "numeric/odeint/iterator/const_step_iterator.hpp" export * }
-    module "numeric__odeint__iterator__const_step_time_iterator" { header "numeric/odeint/iterator/const_step_time_iterator.hpp" export * }
-    module "numeric__odeint__iterator__integrate__detail__integrate_times" { header "numeric/odeint/iterator/integrate/detail/integrate_times.hpp" export * }
-    module "numeric__odeint__iterator__integrate__integrate_adaptive" { header "numeric/odeint/iterator/integrate/integrate_adaptive.hpp" export * }
-    module "numeric__odeint__iterator__integrate__integrate_const" { header "numeric/odeint/iterator/integrate/integrate_const.hpp" export * }
-    module "numeric__odeint__iterator__integrate__integrate" { header "numeric/odeint/iterator/integrate/integrate.hpp" export * }
-    module "numeric__odeint__iterator__integrate__integrate_n_steps" { header "numeric/odeint/iterator/integrate/integrate_n_steps.hpp" export * }
-    module "numeric__odeint__iterator__integrate__integrate_times" { header "numeric/odeint/iterator/integrate/integrate_times.hpp" export * }
-    module "numeric__odeint__iterator__integrate__null_observer" { header "numeric/odeint/iterator/integrate/null_observer.hpp" export * }
-    module "numeric__odeint__iterator__integrate__observer_collection" { header "numeric/odeint/iterator/integrate/observer_collection.hpp" export * }
-    module "numeric__odeint__iterator__n_step_iterator" { header "numeric/odeint/iterator/n_step_iterator.hpp" export * }
-    module "numeric__odeint__iterator__n_step_time_iterator" { header "numeric/odeint/iterator/n_step_time_iterator.hpp" export * }
-    module "numeric__odeint__iterator__times_iterator" { header "numeric/odeint/iterator/times_iterator.hpp" export * }
-    module "numeric__odeint__iterator__times_time_iterator" { header "numeric/odeint/iterator/times_time_iterator.hpp" export * }
-    module "numeric__odeint__stepper__adams_bashforth" { header "numeric/odeint/stepper/adams_bashforth.hpp" export * }
-    module "numeric__odeint__stepper__adams_bashforth_moulton" { header "numeric/odeint/stepper/adams_bashforth_moulton.hpp" export * }
-    module "numeric__odeint__stepper__adams_moulton" { header "numeric/odeint/stepper/adams_moulton.hpp" export * }
-    module "numeric__odeint__stepper__base__algebra_stepper_base" { header "numeric/odeint/stepper/base/algebra_stepper_base.hpp" export * }
-    module "numeric__odeint__stepper__base__explicit_error_stepper_base" { header "numeric/odeint/stepper/base/explicit_error_stepper_base.hpp" export * }
-    module "numeric__odeint__stepper__base__explicit_error_stepper_fsal_base" { header "numeric/odeint/stepper/base/explicit_error_stepper_fsal_base.hpp" export * }
-    module "numeric__odeint__stepper__base__explicit_stepper_base" { header "numeric/odeint/stepper/base/explicit_stepper_base.hpp" export * }
-    module "numeric__odeint__stepper__base__symplectic_rkn_stepper_base" { header "numeric/odeint/stepper/base/symplectic_rkn_stepper_base.hpp" export * }
-    module "numeric__odeint__stepper__bulirsch_stoer_dense_out" { header "numeric/odeint/stepper/bulirsch_stoer_dense_out.hpp" export * }
-    module "numeric__odeint__stepper__bulirsch_stoer" { header "numeric/odeint/stepper/bulirsch_stoer.hpp" export * }
-    module "numeric__odeint__stepper__controlled_runge_kutta" { header "numeric/odeint/stepper/controlled_runge_kutta.hpp" export * }
-    module "numeric__odeint__stepper__controlled_step_result" { header "numeric/odeint/stepper/controlled_step_result.hpp" export * }
-    module "numeric__odeint__stepper__detail__adams_bashforth_coefficients" { header "numeric/odeint/stepper/detail/adams_bashforth_coefficients.hpp" export * }
-    module "numeric__odeint__stepper__detail__adams_moulton_coefficients" { header "numeric/odeint/stepper/detail/adams_moulton_coefficients.hpp" export * }
-    module "numeric__odeint__stepper__detail__rotating_buffer" { header "numeric/odeint/stepper/detail/rotating_buffer.hpp" export * }
-    module "numeric__odeint__stepper__euler" { header "numeric/odeint/stepper/euler.hpp" export * }
-    module "numeric__odeint__stepper__explicit_error_generic_rk" { header "numeric/odeint/stepper/explicit_error_generic_rk.hpp" export * }
-    module "numeric__odeint__stepper__explicit_generic_rk" { header "numeric/odeint/stepper/explicit_generic_rk.hpp" export * }
-    module "numeric__odeint__stepper__extrapolation_stepper" { header "numeric/odeint/stepper/extrapolation_stepper.hpp" export * }
-    module "numeric__odeint__stepper__generation__generation_controlled_runge_kutta" { header "numeric/odeint/stepper/generation/generation_controlled_runge_kutta.hpp" export * }
-    module "numeric__odeint__stepper__generation__generation_dense_output_runge_kutta" { header "numeric/odeint/stepper/generation/generation_dense_output_runge_kutta.hpp" export * }
-    module "numeric__odeint__stepper__generation__generation_runge_kutta_cash_karp54_classic" { header "numeric/odeint/stepper/generation/generation_runge_kutta_cash_karp54_classic.hpp" export * }
-    module "numeric__odeint__stepper__generation__generation_runge_kutta_cash_karp54" { header "numeric/odeint/stepper/generation/generation_runge_kutta_cash_karp54.hpp" export * }
-    module "numeric__odeint__stepper__generation__generation_runge_kutta_dopri5" { header "numeric/odeint/stepper/generation/generation_runge_kutta_dopri5.hpp" export * }
-    module "numeric__odeint__stepper__generation__generation_runge_kutta_fehlberg78" { header "numeric/odeint/stepper/generation/generation_runge_kutta_fehlberg78.hpp" export * }
-    module "numeric__odeint__stepper__generation" { header "numeric/odeint/stepper/generation.hpp" export * }
-    module "numeric__odeint__stepper__generation__make_controlled" { header "numeric/odeint/stepper/generation/make_controlled.hpp" export * }
-    module "numeric__odeint__stepper__generation__make_dense_output" { header "numeric/odeint/stepper/generation/make_dense_output.hpp" export * }
-    module "numeric__odeint__stepper__implicit_euler" { header "numeric/odeint/stepper/implicit_euler.hpp" export * }
-    module "numeric__odeint__stepper__modified_midpoint" { header "numeric/odeint/stepper/modified_midpoint.hpp" export * }
-    module "numeric__odeint__stepper__rosenbrock4_controller" { header "numeric/odeint/stepper/rosenbrock4_controller.hpp" export * }
-    module "numeric__odeint__stepper__rosenbrock4_dense_output" { header "numeric/odeint/stepper/rosenbrock4_dense_output.hpp" export * }
-    module "numeric__odeint__stepper__rosenbrock4" { header "numeric/odeint/stepper/rosenbrock4.hpp" export * }
-    module "numeric__odeint__stepper__runge_kutta4_classic" { header "numeric/odeint/stepper/runge_kutta4_classic.hpp" export * }
-    module "numeric__odeint__stepper__runge_kutta4" { header "numeric/odeint/stepper/runge_kutta4.hpp" export * }
-    module "numeric__odeint__stepper__runge_kutta_cash_karp54_classic" { header "numeric/odeint/stepper/runge_kutta_cash_karp54_classic.hpp" export * }
-    module "numeric__odeint__stepper__runge_kutta_cash_karp54" { header "numeric/odeint/stepper/runge_kutta_cash_karp54.hpp" export * }
-    module "numeric__odeint__stepper__runge_kutta_dopri5" { header "numeric/odeint/stepper/runge_kutta_dopri5.hpp" export * }
-    module "numeric__odeint__stepper__runge_kutta_fehlberg78" { header "numeric/odeint/stepper/runge_kutta_fehlberg78.hpp" export * }
-    module "numeric__odeint__stepper__stepper_categories" { header "numeric/odeint/stepper/stepper_categories.hpp" export * }
-    module "numeric__odeint__stepper__symplectic_euler" { header "numeric/odeint/stepper/symplectic_euler.hpp" export * }
-    module "numeric__odeint__stepper__symplectic_rkn_sb3a_mclachlan" { header "numeric/odeint/stepper/symplectic_rkn_sb3a_mclachlan.hpp" export * }
-    module "numeric__odeint__stepper__velocity_verlet" { header "numeric/odeint/stepper/velocity_verlet.hpp" export * }
-    module "numeric__odeint__util__bind" { header "numeric/odeint/util/bind.hpp" export * }
-    module "numeric__odeint__util__copy" { header "numeric/odeint/util/copy.hpp" export * }
-    module "numeric__odeint__util__detail__less_with_sign" { header "numeric/odeint/util/detail/less_with_sign.hpp" export * }
-    module "numeric__odeint__util__is_pair" { header "numeric/odeint/util/is_pair.hpp" export * }
-    module "numeric__odeint__util__is_resizeable" { header "numeric/odeint/util/is_resizeable.hpp" export * }
-    module "numeric__odeint__util__multi_array_adaption" { header "numeric/odeint/util/multi_array_adaption.hpp" export * }
-    module "numeric__odeint__util__n_ary_helper" { header "numeric/odeint/util/n_ary_helper.hpp" export * }
-    module "numeric__odeint__util__odeint_error" { header "numeric/odeint/util/odeint_error.hpp" export * }
-    module "numeric__odeint__util__resize" { header "numeric/odeint/util/resize.hpp" export * }
-    module "numeric__odeint__util__resizer" { header "numeric/odeint/util/resizer.hpp" export * }
-    module "numeric__odeint__util__same_instance" { header "numeric/odeint/util/same_instance.hpp" export * }
-    module "numeric__odeint__util__same_size" { header "numeric/odeint/util/same_size.hpp" export * }
-    module "numeric__odeint__util__split_adaptor" { header "numeric/odeint/util/split_adaptor.hpp" export * }
-    module "numeric__odeint__util__split" { header "numeric/odeint/util/split.hpp" export * }
-    module "numeric__odeint__util__state_wrapper" { header "numeric/odeint/util/state_wrapper.hpp" export * }
-    module "numeric__odeint__util__stepper_traits" { header "numeric/odeint/util/stepper_traits.hpp" export * }
-    module "numeric__odeint__util__ublas_wrapper" { header "numeric/odeint/util/ublas_wrapper.hpp" export * }
-    module "numeric__odeint__util__unit_helper" { header "numeric/odeint/util/unit_helper.hpp" export * }
-    module "numeric__odeint__util__unwrap_reference" { header "numeric/odeint/util/unwrap_reference.hpp" export * }
-    module "numeric__odeint__version" { header "numeric/odeint/version.hpp" export * }
-    module "numeric__ublas__assignment" { header "numeric/ublas/assignment.hpp" export * }
-    module "numeric__ublas__banded" { header "numeric/ublas/banded.hpp" export * }
-    module "numeric__ublas__blas" { header "numeric/ublas/blas.hpp" export * }
-    module "numeric__ublas__detail__config" { header "numeric/ublas/detail/config.hpp" export * }
-    module "numeric__ublas__detail__documentation" { header "numeric/ublas/detail/documentation.hpp" export * }
-    module "numeric__ublas__detail__duff" { header "numeric/ublas/detail/duff.hpp" export * }
-    module "numeric__ublas__detail__iterator" { header "numeric/ublas/detail/iterator.hpp" export * }
-    module "numeric__ublas__detail__returntype_deduction" { header "numeric/ublas/detail/returntype_deduction.hpp" export * }
-    module "numeric__ublas__detail__temporary" { header "numeric/ublas/detail/temporary.hpp" export * }
-    module "numeric__ublas__detail__vector_assign" { header "numeric/ublas/detail/vector_assign.hpp" export * }
-    module "numeric__ublas__doxydoc" { header "numeric/ublas/doxydoc.hpp" export * }
-    module "numeric__ublas__exception" { header "numeric/ublas/exception.hpp" export * }
-    module "numeric__ublas__experimental__sparse_view" { header "numeric/ublas/experimental/sparse_view.hpp" export * }
-    module "numeric__ublas__expression_types" { header "numeric/ublas/expression_types.hpp" export * }
-    module "numeric__ublas__functional" { header "numeric/ublas/functional.hpp" export * }
-    module "numeric__ublas__fwd" { header "numeric/ublas/fwd.hpp" export * }
-    module "numeric__ublas__hermitian" { header "numeric/ublas/hermitian.hpp" export * }
-    module "numeric__ublas__io" { header "numeric/ublas/io.hpp" export * }
-    module "numeric__ublas__lu" { header "numeric/ublas/lu.hpp" export * }
-    module "numeric__ublas__matrix_expression" { header "numeric/ublas/matrix_expression.hpp" export * }
-    module "numeric__ublas__matrix" { header "numeric/ublas/matrix.hpp" export * }
-    module "numeric__ublas__matrix_proxy" { header "numeric/ublas/matrix_proxy.hpp" export * }
-    module "numeric__ublas__matrix_sparse" { header "numeric/ublas/matrix_sparse.hpp" export * }
-    module "numeric__ublas__matrix_vector" { header "numeric/ublas/matrix_vector.hpp" export * }
-    module "numeric__ublas__operation__begin" { header "numeric/ublas/operation/begin.hpp" export * }
-    module "numeric__ublas__operation_blocked" { header "numeric/ublas/operation_blocked.hpp" export * }
-    module "numeric__ublas__operation__end" { header "numeric/ublas/operation/end.hpp" export * }
-    module "numeric__ublas__operation" { header "numeric/ublas/operation.hpp" export * }
-    module "numeric__ublas__operation__num_columns" { header "numeric/ublas/operation/num_columns.hpp" export * }
-    module "numeric__ublas__operation__num_rows" { header "numeric/ublas/operation/num_rows.hpp" export * }
-    module "numeric__ublas__operations" { header "numeric/ublas/operations.hpp" export * }
-    module "numeric__ublas__operation__size" { header "numeric/ublas/operation/size.hpp" export * }
-    module "numeric__ublas__storage" { header "numeric/ublas/storage.hpp" export * }
-    module "numeric__ublas__storage_sparse" { header "numeric/ublas/storage_sparse.hpp" export * }
-    module "numeric__ublas__symmetric" { header "numeric/ublas/symmetric.hpp" export * }
-    module "numeric__ublas__tags" { header "numeric/ublas/tags.hpp" export * }
-    module "numeric__ublas__traits__c_array" { header "numeric/ublas/traits/c_array.hpp" export * }
-    module "numeric__ublas__traits__const_iterator_type" { header "numeric/ublas/traits/const_iterator_type.hpp" export * }
-    module "numeric__ublas__traits" { header "numeric/ublas/traits.hpp" export * }
-    module "numeric__ublas__traits__iterator_type" { header "numeric/ublas/traits/iterator_type.hpp" export * }
-    module "numeric__ublas__triangular" { header "numeric/ublas/triangular.hpp" export * }
-    module "numeric__ublas__vector_expression" { header "numeric/ublas/vector_expression.hpp" export * }
-    module "numeric__ublas__vector" { header "numeric/ublas/vector.hpp" export * }
-    module "numeric__ublas__vector_of_vector" { header "numeric/ublas/vector_of_vector.hpp" export * }
-    module "numeric__ublas__vector_proxy" { header "numeric/ublas/vector_proxy.hpp" export * }
-    module "numeric__ublas__vector_sparse" { header "numeric/ublas/vector_sparse.hpp" export * }
-  }
-  module boost_cast {
-    module "cast" { header "cast.hpp" export * }
-  }
 }
 module boost_ratio {
   module "ratio__config" { header "ratio/config.hpp" export * }
@@ -7726,16 +7765,12 @@ module boost_unordered_set {
 module "boost_utility__addressof" { header "utility/addressof.hpp" export * }
 module "boost_utility__enable_if" { header "utility/enable_if.hpp" export * }
 module boost_uuid {
-  module "uuid__detail__config" { header "uuid/detail/config.hpp" export * }
-  module "uuid__name_generator" { header "uuid/name_generator.hpp" export * }
-  module "uuid__nil_generator" { header "uuid/nil_generator.hpp" export * }
-  module "uuid__random_generator" { header "uuid/random_generator.hpp" export * }
-  // deprecated: module "uuid__sha1" { header "uuid/sha1.hpp" export * }
-  module "uuid__string_generator" { header "uuid/string_generator.hpp" export * }
-  module "uuid__uuid_generators" { header "uuid/uuid_generators.hpp" export * }
-  module "uuid__uuid" { header "uuid/uuid.hpp" export * }
-  module "uuid__uuid_io" { header "uuid/uuid_io.hpp" export * }
-  module "uuid__uuid_serialize" { header "uuid/uuid_serialize.hpp" export * }
+  export *
+  // Missing includes:
+  exclude header "uuid/detail/random_provider.hpp"
+  exclude header "uuid/detail/sha1.hpp"
+  umbrella "uuid"
+  module * { export * }
 }
 module boost_version {
   module "version" { header "version.hpp" export * }
